(()=>{"use strict";var e={795:e=>{e.exports=window.ReactDOM},822:(e,t,s)=>{var n=s(795);t.H=n.createRoot,n.hydrateRoot}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var t=s.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var a=n.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=n[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e+"../../"})();const n=window.React;var a=s(822);const r=s.p+"images/sticky-default.dc1095b9.jpg";function l(e="",t="",s=""){return`<div class="skin_container wave radius">\n      <div class="thumb">\n        <img src="${e||r}" />\n      </div>\n      <div class="info-wave">\n        <div class="wave">\n          <canvas id="wave-canvas"></canvas>\n          <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n          <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n        </div>\n        <div class="info">\n          <div class="play">\n            <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n              <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n              <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n              <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n              <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n            </button>\n          </div>\n          <div class="title-author">\n            ${t&&`<h2 title="${t}">${t}</h2>`}\n            ${s&&`<p>${s}</p>`}\n          </div>\n          <div class="volume_controls">\n            <button type="button" class="plyr__control" aria-label="Mute" data-plyr="mute">\n                <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n                <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n                <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n                <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n            </button>\n            <div class="plyr__volume">\n                <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`}const o=({onClick:e})=>(0,n.createElement)("button",{className:"close-sticky-player sticky-close",onClick:e,"aria-label":"Close sticky player"},(0,n.createElement)("svg",{width:"30",height:"30",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},(0,n.createElement)("path",{d:"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z",fill:"currentColor"}))),i=function(e,t=500){if(!e)return;let s=1;const n=performance.now();e.querySelector("audio")&&e.querySelector("audio").pause(),requestAnimationFrame((function a(r){const l=r-n;s=Math.max(1-l/t,0),e.style.opacity=s,s>0?requestAnimationFrame(a):e.style.display="none"}))},p=class{constructor(e,t){this.player=e,this.config=t,this.configure(),this.repeatEl=e.elements?.controls?.querySelector('[data-plyr="repeat"]'),this.config.repeat=!1,this.repeatEl?.addEventListener("click",(()=>{this.repeatEl.classList.toggle("control-active"),this.config.repeat=!this.config.repeat})),this.player.on("ended",(()=>{this.config.repeat&&this.player.play()}))}configure(){if(this.player.on("loadedmetadata",(()=>{this.config.saveState||(this.player.currentTime=parseInt(this.config.startTime))})),this.config.disablePause&&this.player.on("pause",(()=>{this.player.play()})),this.config.saveState){this.player.on("timeupdate",(()=>{this.saveState()}));const e=localStorage.getItem("h5ap-player-state");if(e){const{currentTime:t}=JSON.parse(e);this.player.on("loadedmetadata",(()=>{console.log(t),this.player.currentTime=t}))}}}saveState(){const e={currentTime:this.player.currentTime};localStorage.setItem("h5ap-player-state",JSON.stringify(e))}init(e){this.player=e}destroy(){this.player=null}},c=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,title:c,poster:u,artist:d,bgColor:y,primaryColor:v,controlColor:m,repeat:_,autoplay:f,seekTime:g,disablePause:b,startTime:h,saveState:w,preload:k}=t,x=(0,n.useRef)();return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:l(u,c,d),loop:{active:_},autoplay:f,seekTime:g,storage:{enabled:!1}});return new p(e,{disablePause:b,startTime:h,saveState:w}),x.current=e,((e,t,s="#fff",n="#222")=>{const a=e.querySelector("audio"),r=e.querySelector("#wave-canvas");if(!a||!r)return void console.error("Audio or canvas element not found in the container.");const l=window.AudioContext||window.webkitAudioContext;if(!l)return void console.error("Web Audio API is not supported in this browser.");const o=new l,i=o.createMediaElementSource(a),p=o.createAnalyser();i.connect(p),p.connect(o.destination);const c=r.getContext("2d"),u=window.innerWidth,d=window.innerHeight;r.width=u,r.height=d;let y=e?.offsetWidth>800?1024:512;p.fftSize=y;const v=p.frequencyBinCount,m=new Uint8Array(v),_=u/v*1;window.ctx=c;const f=()=>{requestAnimationFrame(f),p.getByteFrequencyData(m),c.fillStyle=n,c.fillRect(0,0,u,d);let e=0;for(let n=0;n<v;n++){const a=t.playing?m[n]:m[n]+100;c.fillStyle=s,c.fillRect(e,d-a-80,_,a+80),e+=_+5}};f(),t.on("play",(()=>{o.resume()})),t.on("pause",(()=>{o.suspend()}))})(s.current,x.current,m,y),()=>{e.destroy()}}),[r,c,u,d,v,y]),(0,n.createElement)("div",{className:`skin_wave ${a}`,id:"",ref:s},(0,n.createElement)(o,{onClick:()=>i(s.current)}),(0,n.createElement)("audio",{preload:k,src:r}))},u=function(e,t,s){return`<div class="skin_container">\n  <div class="player" style="background-image: url(${s||r})">\n    <div class="like waves-effect waves-light">\n      <i class="icon-heart"></i>\n    </div>\n    <div class="mask"></div>\n    <ul class="player-info info-one">\n      <li>${e}</li>\n      <li>${t}</li>\n      <li class="plyr__time--duration">0:00</li>\n    </ul>\n    \n    <button id="play-button" type="button" class="plyr__control waves-effect waves-button waves-float play-inactive" aria-label="Play, {title}" data-plyr="play">\n      <svg class="icon--pressed icon-play" role="presentation">s<use xlink:href="#plyr-pause"></use></svg>\n      <svg class="icon--not-pressed icon-play" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n      <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n      <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n    </button>\n    <div class="control-row">\n      <div class="waves-animation-one"></div>\n      <div class="waves-animation-two"></div>\n      <div class="details">\n        <button id="pause-button" type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n          <svg class="icon--pressed icon-play" role="presentation">s<use xlink:href="#plyr-pause"></use></svg>\n          <svg class="icon--not-pressed icon-play" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n          <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n          <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n        </button>\n      <div class="seek-field">\n        <div class="plyr__progress">\n          <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n          <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n          <span role="tooltip" class="plyr__tooltip">00:00</span>\n        </div>\n      </div>\n      <div class="volume_controls volume-icon">\n          <button type="button" class=" plyr__control" aria-label="Mute" data-plyr="mute">\n              <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n              <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n              <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n              <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n          </button>\n          <div class="plyr__volume">\n              <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>`},d=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,title:l,artist:o,disablePause:i,startTime:c,saveState:d,autoplay:y,repeat:v,seekTime:m,preload:_,poster:f}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:u(l,o,f),loop:{active:v},autoplay:y,seekTime:m,storage:{enabled:!1}});return new p(e,{disablePause:i,startTime:c,saveState:d}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_card-1 h5ap_skin ${a}`,ref:s},(0,n.createElement)("audio",{preload:_,src:r,type:"audio/mp4"}))},y=function(e,t,s){return`<div class="skin_container radius">\n  <img data-amplitude-song-info="cover_art_url" src="${s||r}"/>\n  <div class="bottom-container">\n    \n    <div class="plyr__progress">\n        <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n        <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n        <span role="tooltip" class="plyr__tooltip">00:00</span>\n    </div> \n    <div class="time-container">\n      <span class="current-time plyr__time--current"></span>\n      <span class="duration plyr__time--duration"></span>\n    </div>\n\n    <div class="control-container">\n      <button id="play-button" type="button" class="plyr__control amplitude-play-pause" aria-label="Play, ${e}" data-plyr="play">\n        <svg class="icon--pressed icon-play" role="presentation">s<use xlink:href="#plyr-pause"></use></svg>\n        <svg class="icon--not-pressed icon-play" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n        <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n        <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n      </button>\n      <div class="meta-container">\n        <span data-amplitude-song-info="name" class="song-name">${e}</span>\n        <span data-amplitude-song-info="artist">${t}</span>\n      </div>\n    </div>\n  </div>\n</div>`},v=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,title:l,artist:o,poster:i,repeat:c,disablePause:u,autoplay:d,seekTime:v,startTime:m,saveState:_,preload:f}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:y(l,o,i),loop:{active:c},autoplay:d,seekTime:v,storage:{enabled:!1}});return new p(e,{disablePause:u,startTime:m,saveState:_}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_card-2 h5ap_skin ${a}`,ref:s},(0,n.createElement)("audio",{preload:f,src:r}))},m=({attributes:e,containerRef:t,playerRef:s,className:a})=>{const{source:r,controls:l,preload:c,repeat:u,autoplay:d,seekTime:y,startTime:v,disablePause:m,saveState:_,i18n:f,speed:g,uniqueId:b}=e;return(0,n.useEffect)((()=>{if(!t.current)return;const e=new Plyr(t.current.querySelector("audio"),{controls:Object.keys(l).filter((e=>l[e])),loop:{active:u},autoplay:d,seekTime:y,i18n:f,tooltips:{controls:!0,seek:!0},speed:{selected:1,options:g},storage:{enabled:!1}});return s.current=e,new p(e,{disablePause:m,startTime:v,saveState:_}),()=>{e.destroy()}}),[e]),(0,n.createElement)(n.Fragment,null,(0,n.createElement)("div",{ref:t,className:`skin_default ${a}`},(0,n.createElement)(o,{onClick:()=>i(t.current)}),(0,n.createElement)("audio",{id:b,className:b,preload:c,src:r,controls:!0},"Your browser does not support the ",(0,n.createElement)("code",null,"audio")," element.")))};function _(e=null,t=null,s=null,n={download:!1}){return`<div class="plyr__controls radius">\n    <div class="plyr__controls rewind_play_fastforward">\n    <img class="thumbnails" src="${e||r}" alt="">\n    <div class="plyr__controls">\n    <button type="button" class="plyr__control" data-plyr="rewind">\n      <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n      <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n    </button>\n    <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n      <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n      <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n      <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n      <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n    </button>\n    <button type="button" class="plyr__control" data-plyr="fast-forward">\n      <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n      <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n    </button>\n    </div>\n    </div>\n    <div class="infos">\n      <div class="title">\n        <h3>${t}</h3>\n    </div>\n        <div class="time_progress">\n        <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n        <div class="plyr__progress">\n          <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n          <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n          <span role="tooltip" class="plyr__tooltip">00:00</span>\n        </div>\n        <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n        </div>\n      </div>\n    <div class="other_controls">\n      <div class="extra_controls">\n        ${!0===n?.download?`<a class="plyr__controls__item plyr__control plyr__download" href="${s}" target="_blank" download data-plyr="download">\n          <svg aria-hidden="true" focusable="false">\n            <use xlink:href="#plyr-download"></use>\n          </svg>\n          <span class="plyr__sr-only">Download</span>\n        </a>`:""}\n        ${!0===n?.repeat?'<button type="button" data-active="false" class="plyr__control" data-plyr="repeat"><svg class="icon">\n          <use xlink:href="#exchange"></use>\n        </button>':""}\n        ${!0===n?.playlist?'<button type="button" class="plyr__control" data-active="true" data-plyr="playlist"><span class="dashicons dashicons-playlist-audio"></span></button>':""}\n      </div>\n      <div class="volume_controls">\n      <button type="button" class="plyr__control" aria-label="Mute" data-plyr="mute">\n          <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n          <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n          <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n          <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n      </button>\n      <div class="plyr__volume">\n          <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n      </div>\n      </div>\n    </div>\n  </div>`}const f=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,title:l,poster:c,download:u,repeat:d,autoplay:y,seekTime:v,disablePause:m,startTime:f,saveState:g,preload:b}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:_(c,l,r,{download:u,repeat:!0}),loop:{active:d},autoplay:y,seekTime:v,storage:{enabled:!1}});return new p(e,{disablePause:m,startTime:f,saveState:g}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_fusion ${a}`,ref:s},(0,n.createElement)(o,{onClick:()=>i(s.current)}),(0,n.createElement)("audio",{preload:b,src:r}))},g=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,repeat:l,autoplay:c,seekTime:u,disablePause:d,startTime:y,saveState:v,preload:m}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:'<div class="skin_container h5ap-player-skin-5 radius">\n      <div class="progress-time">\n          <div>\n              <div class="plyr__progress">\n                  <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n                  <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n                  <span role="tooltip" class="plyr__tooltip">00:00</span>\n              </div>\n          </div>\n          <div class="time">\n              <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n              <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n          </div>\n      </div>\n    <div class="controls">\n      <button type="button" class="plyr__control" data-plyr="rewind">\n        <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n        <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n      </button>\n      <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n        <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n        <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n        <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n        <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n      </button>\n      <button type="button" class="plyr__control" data-plyr="fast-forward">\n        <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n        <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n      </button>\n    </div>\n  </div>',loop:{active:l},autoplay:c,seekTime:u,storage:{enabled:!1}});return new p(e,{disablePause:d,startTime:y,saveState:v}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_simple-1 h5ap_simple1 ${a}`,ref:s},(0,n.createElement)(o,{onClick:()=>i(s.current)}),(0,n.createElement)("audio",{preload:m,src:r}))},b=function(e){return`<div class="skin_container">\n      <div class="progress-time">\n          <div class="thumbnail"><img src="${e||r}" /></div>\n      </div>\n    <div class="controls">\n      <button type="button" class="plyr__control" data-plyr="rewind">\n        <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n        <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n      </button>\n      <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n        <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n        <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n        <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n        <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n      </button>\n      <button type="button" class="plyr__control" data-plyr="fast-forward">\n        <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n        <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n      </button>\n    </div>\n  </div>`},h=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,poster:l,preload:c,repeat:u,autoplay:d,seekTime:y,disablePause:v,startTime:m,saveState:_}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:b(l),loop:{active:u},autoplay:d,seekTime:y,storage:{enabled:!1}});return new p(e,{disablePause:v,startTime:m,saveState:_}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_simple-2 h5ap_simple2 ${a}`,ref:s},(0,n.createElement)(o,{onClick:()=>i(s.current)}),(0,n.createElement)("audio",{preload:c,src:r}))};function w(e){return`<div class="skin_container StampAudioPlayerSkin radius">\n   <button type="button" class="muteUnmute plyr__control" data-plyr="mute"><svg class="icon--pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-muted"></use></svg><svg class="icon--not-pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-volume"></use></svg></button>\n   <div class="extraOptions">\n   <h3 class="audioTitle">${e}</h3>\n\n   <div class="plyr__volume">\n        <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n    </div>\n    </div>\n\n   <div class="mainOptions">\n   <button class="leftAudio  plyr__controls__item plyr__control" data-plyr="rewind"><svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-rewind"></use></svg></button>\n\n   <div class="controls">\n   <div class="play_forward_rewind">\n    <button class="playPauseAudio  plyr__controls__item plyr__control" data-plyr="rewind"><svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-rewind"></use></svg></button>\n    <button class="plyr__controls__item plyr__control playPauseAudio" type="button" data-plyr="play" aria-label="Play"><svg class="icon--pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-pause"></use></svg><svg class="icon--not-pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-play"></use></svg></button>\n   </div>\n\n   <div class="audioProgressView">\n    <div class="progressWrap">\n    <span class="plyr__time currentTime plyr__time--current">00:00</span>\n    <div class="plyr__controls__item plyr__progress__container"><div class="plyr__progress"><input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" autocomplete="off" role="slider" aria-label="Seek" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0" id="plyr-seek-7930" aria-valuetext="00:00 of 03:05" seek-value="14.901800327332243" style="--value:0%;"><progress class="plyr__progress__buffer" min="0" max="100" value="0" role="progressbar" aria-hidden="true">% buffered</progress><span class="plyr__tooltip" style="left: 11.2357%;">00:20</span></div></div>\n    <span class="plyr__time totalTime plyr__time--duration">00:00</span>\n      </div>\n      </div>\n    </div>\n\n   <button class="rightAudio plyr__controls__item plyr__control" data-plyr="fast-forward"><svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-fast-forward"></use></svg></button>\n    </div>\n    </div>`}const k=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,title:l,poster:c,repeat:u,autoplay:d,seekTime:y,startTime:v,disablePause:m,saveState:_,preload:f}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:w(l),loop:{active:u},autoplay:d,seekTime:y,storage:{enabled:!1}});return new p(e,{disablePause:m,startTime:v,saveState:_}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_stamp ${a}`,ref:s},(0,n.createElement)(o,{onClick:()=>i(s.current)}),(0,n.createElement)("audio",{preload:f,src:r}))},x=({attributes:e,id:t})=>{const{primaryColor:s,hoverColor:a,bgColor:r,controlColor:l,radius:o,width:i,align:p,alignment:c,textColor:u}=e,[d,y]=(0,n.useState)();return(0,n.useEffect)((()=>{const e=`\n    #${t}{\n      display: flex;\n      justify-content: ${c};\n    }\n    #${t} .plyr{\n      --plyr-color-main: ${s};\n      --plyr-color-bg: ${r};\n      --theme-skin-wave-color: ${l};\n      --plyr-color-text: ${u};\n      --plyr-color-background: ${r};\n      --plyr-color-control: ${l};\n    }\n    #${t} .h5ap_standard_player,#${t} .h5ap-sticky,#${t} .h5ap_skin\n     {\n      width: ${i};\n    }\n   \n    #${t} .skin_fusion,#${t} .h5ap-sticky,#${t} .skin_wave,#${t} .skin_stamp\n     {\n      min-width: 500px;\n      max-width: 100% !important;\n    }\n    @media only screen and (max-width: 767px) {\n      #${t} .skin_fusion, #${t} .h5ap-sticky,#${t} .skin_wave,#${t} .skin_stamp\n      {\n        min-width: auto;\n        max-width: 100% !important;\n      }\n      #${t} .h5ap-sticky,\n      #${t} .skin_fusion .plyr,\n      #${t} .skin_wave .plyr,\n      #${t} .skin_stamp .plyr\n      {\n        min-width: auto;\n        max-width: 100%;\n      }\n    }\n    #${t} .plyr__controls {\n      --plyr-audio-control-color: ${l};\n      background: ${r||"#eaeaea"};\n      border-radius:${o}\n    }\n    #${t} .radius{\n      border-radius: ${o}\n    }\n    #${t} .skin_default .plyr__control,#${t}{\n      --theme-skin-wave-color: ${s};\n    }\n    #${t} .skin_simple_sticky{\n      background: ${r};\n    }\n    `.replace(/\s+/g," ").trim();y(e)}),[i,r,o,t,a,s,p,l,c,u]),(0,n.createElement)("style",null,d)},$=(e,t,s)=>`<div class="skin_container max-w-md w-full rounded-2xl shadow-xl p-6">\n   <div class="relative aspect-square mb-6 rounded-lg overflow-hidden shadow-md"><img src="${s||r}" alt="Lost in the City Lights" class="w-full h-full object-cover"></div>\n   <div class="mb-6">\n      <h2 class="text-2xl font-bold text-gray-800 mb-1">${e}</h2>\n      <p class="text-gray-500">${t}</p>\n   </div>\n   <div class="mb-4">\n      \n      <div class="plyr__progress">\n        <input  data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n        <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n        <span role="tooltip" class="plyr__tooltip">00:00</span>\n    </div>\n      <div class="flex justify-between text-sm text-gray-500 mt-1">\n        <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n        <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n      </div>\n   </div>\n   <div class="flex items-center justify-between mb-6">\n      \n      <button class="p-2" data-plyr="rewind">\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-skip-back ">\n            <polygon points="19 20 9 12 19 4 19 20"></polygon>\n            <line x1="5" x2="5" y1="19" y2="5"></line>\n         </svg>\n      </button>\n      <button class="plyr__control p-4 bg-indigo-500 rounded-full text-white hover:bg-indigo-600" data-plyr="play">\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-play icon--not-pressed">\n            <polygon points="5 3 19 12 5 21 5 3"></polygon>\n         </svg>\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pause icon--pressed"><rect width="4" height="16" x="6" y="4"></rect><rect width="4" height="16" x="14" y="4"></rect></svg>\n      </button>\n      <button class="p-2" data-plyr="fast-forward">\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-skip-forward ">\n            <polygon points="5 4 15 12 5 20 5 4"></polygon>\n            <line x1="19" x2="19" y1="5" y2="19"></line>\n         </svg>\n      </button>\n      \n   </div>\n   <div class="flex items-center gap-2">\n      <button class="cursor-pointer text-gray-500" aria-label="Mute" data-plyr="mute">\n         <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-volume2 ">\n            <polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>\n            <path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path>\n            <path d="M19.07 4.93a10 10 0 0 1 0 14.14"></path>\n         </svg>\n      </button>\n      <input type="range" data-plyr="volume" min="0" max="1" step="0.01" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer" value="1">\n   </div>\n</div>`,S=function(e){const{attributes:t,containerRef:s,playerRef:a,className:r}=e,{source:l,poster:o,title:i,artist:c,skin:u,repeat:d,autoplay:y,seekTime:v,disablePause:m,startTime:_,saveState:f,preload:g}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:$(i,c,o),loop:{active:d},autoplay:y,seekTime:v,storage:{enabled:!1}});return new p(e,{disablePause:m,startTime:_,saveState:f}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_player9 h5ap_${u} ${r}`,ref:s},(0,n.createElement)("audio",{preload:g,src:l}))},P=(e,t,s)=>`<div class="skin_container max-w-md w-full rounded-2xl shadow-xl p-6 text-white">\n   <div class="flex items-center gap-4 mb-6">\n      <div class="w-20 h-20 rounded-lg overflow-hidden shadow-lg"><img src="${s||r}" alt="Lost in the City Lights" class="w-full h-full object-cover"></div>\n      <div>\n         <h2 class="text-xl font-bold mb-1 text-white mt-0">${e}</h2>\n         <p class="text-purple-200">${t}</p>\n      </div>\n   </div>\n   <div class="mb-4">\n       <div class="plyr__progress">\n        <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n        <span role="tooltip" class="plyr__tooltip">00:00</span>\n    </div>\n      <div class="flex justify-between text-sm text-purple-200 mt-1">\n         <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n         <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n      </div>\n   </div>\n   <div class="flex items-center justify-between">\n      <button class="p-2 text-purple-200 hover:text-white bg-inherit" data-plyr="rewind">\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-skip-back icon--not-pressed">\n            <polygon points="19 20 9 12 19 4 19 20"></polygon>\n            <line x1="5" x2="5" y1="19" y2="5"></line>\n         </svg>\n      </button>\n      <button class="plyr__control p-4 bg-indigo-500 rounded-full text-white hover:bg-indigo-600 bg-inherit" data-plyr="play">\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-play icon--not-pressed">\n            <polygon points="5 3 19 12 5 21 5 3"></polygon>\n         </svg>\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pause icon--pressed"><rect width="4" height="16" x="6" y="4"></rect><rect width="4" height="16" x="14" y="4"></rect></svg>\n      </button>\n      <button class="p-2 text-purple-200 hover:text-white bg-inherit" data-plyr="fast-forward">\n         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-skip-forward ">\n            <polygon points="5 4 15 12 5 20 5 4"></polygon>\n            <line x1="19" x2="19" y1="5" y2="19"></line>\n         </svg>\n      </button>\n   </div>\n</div>`,E=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,poster:l,title:o,artist:i,repeat:c,autoplay:u,seekTime:d,disablePause:y,startTime:v,saveState:m,preload:_}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:P(o,i,l),loop:{active:c},autoplay:u,seekTime:d,storage:{enabled:!1}});return new p(e,{disablePause:y,startTime:v,saveState:m}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_player10 h5ap_skin ${a}`,ref:s},(0,n.createElement)("audio",{preload:_,src:r}))},T=(e,t,s)=>`<div class="skin_container max-w-md w-full rounded-2xl shadow-xl overflow-hidden">\n        <div class="relative h-48"><img\n                src="${s||r}"\n                alt="Lost in the City Lights" class="w-full h-full object-cover">\n            <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>\n            <div class="absolute bottom-0 left-0 right-0 p-6">\n                <h2 class="text-2xl font-bold mb-1">${e}</h2>\n                <p>${t}</p>\n            </div>\n        </div>\n        <div class="p-6">\n            <div class="mb-4">\n                <div class="plyr__progress">\n                     <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n                     <span role="tooltip" class="plyr__tooltip">00:00</span>\n                  </div>\n                <div class="flex justify-between text-sm text-gray-500 dark:text-gray-400 mt-1">\n                    <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n                     <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n                </div>\n            </div>\n            <div class="flex items-center justify-between mb-6">\n               <button data-plyr="rewind"\n                    class="p-2 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full"><svg\n                        xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"\n                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"\n                        class="lucide lucide-skip-back ">\n                        <polygon points="19 20 9 12 19 4 19 20"></polygon>\n                        <line x1="5" x2="5" y1="19" y2="5"></line>\n                    </svg></button>\n                    <button class="p-4 bg-blue-500 rounded-full text-white hover:bg-blue-600 plyr__control" aria-label="Play, {title}" data-plyr="play">\n                     <svg\n                           xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"\n                           stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"\n                           class="icon--not-pressed">\n                           <polygon points="5 3 19 12 5 21 5 3"></polygon>\n                     </svg>\n                     <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon--pressed"><rect width="4" height="16" x="6" y="4"></rect><rect width="4" height="16" x="14" y="4"></rect></svg>\n                    </button>\n                    \n                    <button data-plyr="fast-forward"\n                    class="p-2 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-full"><svg\n                        xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"\n                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"\n                        class="lucide lucide-skip-forward ">\n                        <polygon points="5 4 15 12 5 20 5 4"></polygon>\n                        <line x1="19" x2="19" y1="5" y2="19"></line>\n                    </svg></button></div>\n            <div class="flex items-center gap-2">\n               <button type="button" class="plyr__control text-gray-500 dark:text-gray-400" aria-label="Mute" data-plyr="mute">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n               </button>\n               <div class="plyr__volume w-full max-w-full">\n                  <input class="max-w-full" data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n               </div>\n            </div>\n        </div>\n    </div>`,C=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,poster:l,title:o,artist:i,repeat:c,autoplay:u,seekTime:d,disablePause:y,startTime:v,saveState:m,preload:_}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:T(o,i,l),loop:{active:c},autoplay:u,seekTime:d});return new p(e,{disablePause:y,startTime:v,saveState:m}),()=>{e.destroy()}}),[t]),(0,n.createElement)("div",{className:`skin_player11 h5ap_player11 ${a}`,ref:s},(0,n.createElement)("audio",{preload:_,autoplay:u,loop:c,src:r}))},N=function(e="",t="",s=""){return`<div class="skin_simple_sticky" style="background:${s}">\n    <div class="play">\n    <button class="plyr__controls__item plyr__control" type="button" data-plyr="play" aria-label="Play Audio"><svg class="icon--pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-pause"></use></svg><svg class="icon--not-pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-play"></use></svg><span class="label--pressed plyr__sr-only">Pause</span><span class="label--not-pressed plyr__sr-only">Play Audio</span></button>\n    </div>\n    <div class="title" title="${e}">${e}</div>\n    <div class="logo">\n      <img src="${t}" alt="" />\n    </div>\n  </div>`},R=function(e){const{attributes:t,containerRef:s,className:a}=e,{source:r,poster:l,title:c,bgColor:u,repeat:d,autoplay:y,seekTime:v,disablePause:m,startTime:_,saveState:f,preload:g}=t;return(0,n.useEffect)((()=>{if(!s.current)return;const e=new Plyr(s.current.querySelector("audio"),{controls:N(c,l,u),loop:{active:d},autoplay:y,seekTime:v,storage:{enabled:!1}});return console.log("simple 3"),new p(e,{disablePause:m,startTime:_,saveState:f}),()=>{e.destroy()}}),[t]),console.log(a),(0,n.createElement)("div",{className:`skin_simple-3 h5ap_simple2 ${a}`,ref:s},(0,n.createElement)(o,{onClick:()=>i(s.current)}),(0,n.createElement)("audio",{preload:g,src:r}))},j=({attributes:e,id:t})=>{const s=(0,n.useRef)(null),a={Default:m,Fusion:f,Stamp:k,Wave:c,"Card-1":d,"Card-2":v,"Simple-1":g,"Simple-2":h,"Simple-3":R,Player9:S,Player10:E,Player11:C},{disablePause:r,isSticky:l,skin:o,width:i,startTime:p,i18n:u,multiple_audio:y,speed:_,repeat:b,autoplay:w,seekTime:$}=e,P=a[e.skin]||null;(0,n.useEffect)((()=>{if(!y){const e=document.querySelectorAll("audio");e.forEach((t=>{t.addEventListener("play",(()=>{e.forEach((e=>{e!==t&&e.pause()}))}))}))}}),[]);const T=(0,n.useRef)(null);return P?(0,n.createElement)(n.Fragment,null,(0,n.createElement)(x,{attributes:e,id:t}),(0,n.createElement)(P,{attributes:e,containerRef:s,playerRef:T,className:`h5ap_skin ${l&&["Default","Fusion","Stamp","Wave","Simple-1","Simple-2","Simple-3"].includes(o)?"h5ap-sticky"+("100%"===i?" full-width":""):""} `})):(0,n.createElement)("h2",null,"Audio Player")};document.addEventListener("DOMContentLoaded",(function(){document.querySelectorAll(".wp-block-h5ap-audioplayer").forEach((e=>{const t=JSON.parse(e.dataset.attributes),s=e.dataset.id;(0,a.H)(e).render((0,n.createElement)(j,{attributes:t,id:s})),e.removeAttribute("data-attributes"),e.removeAttribute("data-id")}))}))})();